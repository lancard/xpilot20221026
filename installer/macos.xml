<project>
    <shortName>xPilot</shortName>
    <fullName>xPilot</fullName>
    <version>2.0.0</version>
    <licenseFile>../LICENSE</licenseFile>
    <compressionAlgorithm>lzma-ultra</compressionAlgorithm>
    <createOsxBundleDmg>1</createOsxBundleDmg>
    <disableSplashScreen>1</disableSplashScreen>
    <enableRollback>0</enableRollback>
    <enableTimestamp>1</enableTimestamp>
    <productDisplayName>xPilot</productDisplayName>
    <saveRelativePaths>1</saveRelativePaths>
    <vendor>xPilot for VATSIM</vendor>
    <osxPlatforms>osx-x86_64 osx-arm64</osxPlatforms>
    <osxApplicationBundleIcon>../client/icon.icns</osxApplicationBundleIcon>  
    <osxApplicationBundleIdentifier>org.vatsim.xpilot</osxApplicationBundleIdentifier>
    <osxSigningIdentity>${apple_signing_identity}</osxSigningIdentity>
    <osxSigningKeychainFile>/Users/runner/Library/Keychains/Signing keychain-db</osxSigningKeychainFile>
    <functionDefinitionList>
        <actionDefinition>
            <name>IsXpilotRunning</name>
            <actionList>
                <showProgressDialog>
                    <title>Waiting for xPilot to exit</title>
                    <actionList>
                        <while>
                            <actionList>
                                <wait ms="50" progressText="xPilot must be closed before the installation can proceed."/>
                            </actionList>
                            <conditionRuleList>
                                <ruleGroup>
                                    <ruleList>
                                        <processTest logic="is_running" name="xPilot"/>
                                        <platformTest type="osx"/>
                                    </ruleList>
                                </ruleGroup>
                            </conditionRuleList>
                        </while>
                    </actionList>
                </showProgressDialog>
            </actionList>
        </actionDefinition>
        <actionDefinition>
            <name>IsXplaneRunning</name>
            <actionList>
                <showProgressDialog>
                    <title>Waiting for X-Plane to exit</title>
                    <actionList>
                        <while>
                            <actionList>
                                <wait ms="50" progressText="X-Plane must be closed before the installation can proceed."/>
                            </actionList>
                            <conditionRuleList>
                                <ruleGroup>
                                    <ruleList>
                                        <processTest logic="is_running" name="X-Plane"/>
                                        <platformTest type="osx"/>
                                    </ruleList>
                                </ruleGroup>
                            </conditionRuleList>
                        </while>
                    </actionList>
                </showProgressDialog>
            </actionList>
        </actionDefinition>
    </functionDefinitionList>
    <componentList>
        <component>
            <name>xPilot</name>
            <description>xPilot for VATSIM</description>
            <canBeEdited>1</canBeEdited>
            <selected>1</selected>
            <show>1</show>
            <folderList>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfiles</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <allowWildcards>1</allowWildcards>
                            <origin>${client_build_dir}/xPilot.app</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Copy Sounds</description>
                    <destination>~/Library/Application Support/org.vatsim.xpilot/Sounds</destination>
                    <name>sounds</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <allowWildcards>1</allowWildcards>
                            <origin>../client/Resources/Sounds/*</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>X-Plane 11 Plugin</description>
                    <destination>${xplane11path}/Resources/plugins/xPilot</destination>
                    <name>xplane11plugin</name>
                    <platforms>all</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <allowWildcards>1</allowWildcards>
                            <origin>${plugin_build_dir}/*</origin>
                        </distributionFile>
                    </distributionFileList>
                    <ruleList>
                        <stringTest text="${xplane11path}" type="not_empty"/>
                    </ruleList>
                </folder>
                <folder>
                    <description>X-Plane 12 Plugin</description>
                    <destination>${xplane12path}/Resources/plugins/xPilot</destination>
                    <name>xplane12plugin</name>
                    <platforms>all</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <allowWildcards>1</allowWildcards>
                            <origin>${plugin_build_dir}/*</origin>
                        </distributionFile>
                    </distributionFileList>
                    <ruleList>
                        <stringTest text="${xplane12path}" type="not_empty"/>
                    </ruleList>
                </folder>
            </folderList>
        </component>
    </componentList>
    <preBuildActionList>
        <setInstallerVariable>
            <name>client_build_dir</name>
            <value>${env(CLIENT_BUILD_DIR)}</value>
            <ruleList>
                <compareText logic="does_not_equal" text="${env(CLIENT_BUILD_DIR)}" value=""/>
            </ruleList>
        </setInstallerVariable>
        <setInstallerVariable>
            <name>plugin_build_dir</name>
            <value>${env(PLUGIN_BUILD_DIR)}</value>
            <ruleList>
                <compareText logic="does_not_equal" text="${env(PLUGIN_BUILD_DIR)}" value=""/>
            </ruleList>
        </setInstallerVariable>
        <runProgram>
            <program>security</program>
            <programArguments>unlock-keychain -p '${password}' "${project.osxSigningKeychainFile}"</programArguments>
            <ruleList>
                <platformTest type="osx"/>
            </ruleList>
        </runProgram>
    </preBuildActionList>
    <preInstallationActionList>
        <IsXpilotRunning/>
        <IsXplaneRunning/>
        <setInstallerVariable>
            <name>last_install_dir</name>
            <value>${platform_install_prefix}/${product_shortname}</value>
        </setInstallerVariable>
        <setInstallerVariable>
            <name>xplane11path</name>
            <value></value>
        </setInstallerVariable>
        <setInstallerVariable>
            <name>xplane12path</name>
            <value></value>
        </setInstallerVariable>
        <actionGroup>
            <actionList>
                <readFile>
                    <name>last_install_dir</name>
                    <path>~/Library/Application Support/org.vatsim.xpilot/lastinstallpath.txt</path>
                    <ruleList>
                        <platformTest type="osx"/>
                    </ruleList>
                </readFile>
            </actionList>
            <ruleList>
                <platformTest type="osx"/>
                <fileTest>
                    <condition>readable</condition>
                    <path>~/Library/Application Support/org.vatsim.xpilot/lastinstallpath.txt</path>
                </fileTest>
            </ruleList>
        </actionGroup>
        <actionGroup>
            <actionList>
                <readFile>
                    <name>xplane11path</name>
                    <path>~/Library/Application Support/org.vatsim.xpilot/xplane11path.txt</path>
                    <ruleList>
                        <platformTest type="osx"/>
                    </ruleList>
                </readFile>
            </actionList>
            <ruleList>
                <platformTest type="osx"/>
                <fileTest>
                    <condition>readable</condition>
                    <path>~/Library/Application Support/org.vatsim.xpilot/xplane11path.txt</path>
                </fileTest>
            </ruleList>
        </actionGroup>
        <actionGroup>
            <actionList>
                <readFile>
                    <name>xplane12path</name>
                    <path>~/Library/Application Support/org.vatsim.xpilot/xplane12path.txt</path>
                    <ruleList>
                        <platformTest type="osx"/>
                    </ruleList>
                </readFile>
            </actionList>
            <ruleList>
                <platformTest type="osx"/>
                <fileTest>
                    <condition>readable</condition>
                    <path>~/Library/Application Support/org.vatsim.xpilot/xplane12path.txt</path>
                </fileTest>
            </ruleList>
        </actionGroup>
        <setInstallerVariable>
            <name>installdir</name>
            <value>${last_install_dir}</value>
        </setInstallerVariable>
        <setInstallerVariable>
            <name>xplane11path</name>
            <value>${xplane11path}</value>
        </setInstallerVariable>
        <setInstallerVariable>
            <name>xplane12path</name>
            <value>${xplane12path}</value>
        </setInstallerVariable>
        <!-- detected existing installation, switch to upgrade mode. -->
        <actionGroup>
            <actionList>
                <setInstallerVariable name="project.installationType" value="upgrade"/>
                <setInstallerVariable name="project.allowComponentSelection" value="0"/>
                <setInstallerVariable name="project.parameter(installdir).ask" value="0"/>
            </actionList>
            <ruleList>
                <fileTest condition="exists" path="${installdir}"/>
            </ruleList>
        </actionGroup>
    </preInstallationActionList>
    <postInstallationActionList>
        <createDirectory>
            <path>${installdir}/.sentry-native</path>
        </createDirectory>
        <createDirectory>
            <path>~/Library/Application Support/org.vatsim.xpilot</path>
            <ruleList>
                <platformTest type="osx"/>
            </ruleList>
        </createDirectory>
        <createDirectory>
            <path>~/Library/Application Support/org.vatsim.xpilot/Sounds</path>
            <ruleList>
                <platformTest type="osx"/>
            </ruleList>
        </createDirectory>
        <writeFile>
            <path>~/Library/Application Support/org.vatsim.xpilot/lastinstallpath.txt</path>
            <text>${installdir}</text>
            <ruleList>
                <platformTest type="osx"/>
            </ruleList>
        </writeFile>
        <writeFile>
            <path>~/Library/Application Support/org.vatsim.xpilot/xplane11path.txt</path>
            <text>${xplane11path}</text>
            <ruleList>
                <platformTest type="osx"/>
            </ruleList>
        </writeFile>
        <writeFile>
            <path>~/Library/Application Support/org.vatsim.xpilot/xplane12path.txt</path>
            <text>${xplane12path}</text>
            <ruleList>
                <platformTest type="osx"/>
            </ruleList>
        </writeFile>
        <addFilesToUninstaller>
            <files>~/Library/Application Support/org.vatsim.xpilot/</files>
            <matchHiddenFiles>1</matchHiddenFiles>
            <ruleList>
                <platformTest type="osx"/>
            </ruleList>
        </addFilesToUninstaller>
        <addFilesToUninstaller>
            <files>${installdir}/.sentry-native/</files>
            <matchHiddenFiles>1</matchHiddenFiles>
        </addFilesToUninstaller>
        <deleteFile>
            <path>~/Library/Application Support/org.vatsim.xpilot/lastxplanepath.txt</path>
        </deleteFile>
    </postInstallationActionList>
    <finalPageActionList>
        <runProgram>
            <program>open</program>
            <programArguments>${installdir}/xPilot.app</programArguments>
            <progressText>Launch ${project.fullName}</progressText>
            <ruleList>
                <platformTest type="osx"/>
            </ruleList>
        </runProgram>
    </finalPageActionList>
    <parameterList>
        <directoryParameter>
            <name>xplane12path</name>
            <title>X-Plane 12 Location</title>
            <description></description>
            <explanation>Please browse to the folder where X-Plane 12 is installed so that the xPilot plugin can be installed.

ADVANCED USERS: If X-Plane 12 is not installed on this computer, leave the folder path empty to skip installing the plugin. You will need to run the installer on the computer where X-Plane 12 is installed to install the plugin.

Skip this step if you DO NOT use X-Plane 12.</explanation>
            <value></value>
            <default></default>
            <allowEmptyValue>1</allowEmptyValue>
            <mustBeWritable>0</mustBeWritable>
            <mustExist>1</mustExist>
            <width>40</width>
            <validationActionList>
                <throwError text="Invalid X-Plane 12 folder path. The path should be the root folder of where X-Plane.app is installed.">
                    <ruleList>
                        <stringTest text="${xplane12path}" type="not_empty"/>
                        <fileExists negate="1" path="${xplane12path}/X-Plane.app"/>
                        <platformTest type="osx"/>
                    </ruleList>
                </throwError>
                <substitute>
                    <files>${xplane12path}/Output/preferences/X-Plane.prf</files>
                    <type>regexp</type>
                    <substitutionList>
                        <substitution pattern="^_rcv_port\s+(?!49000).*$" value="_rcv_port 49000"/>
                        <substitution pattern="^_disable_incoming_networking\s+1$" value="_disable_incoming_networking 0"/>
                    </substitutionList>
                </substitute>
            </validationActionList>
        </directoryParameter>
        <directoryParameter>
            <name>xplane11path</name>
            <title>X-Plane 11 Location</title>
            <description></description>
            <explanation>Please browse to the folder where X-Plane 11 is installed so that the xPilot plugin can be installed.

ADVANCED USERS: If X-Plane 11 is not installed on this computer, leave the folder path empty to skip installing the plugin. You will need to run the installer on the computer where X-Plane 11 is installed to install the plugin.

Skip this step if you DO NOT use X-Plane 11.</explanation>
            <value></value>
            <default></default>
            <allowEmptyValue>1</allowEmptyValue>
            <mustBeWritable>0</mustBeWritable>
            <mustExist>1</mustExist>
            <width>40</width>
            <validationActionList>
                <throwError text="Invalid X-Plane 11 folder path. The path should be the root folder of where X-Plane.app is installed.">
                    <ruleList>
                        <stringTest text="${xplane11path}" type="not_empty"/>
                        <fileExists negate="1" path="${xplane11path}/X-Plane.app"/>
                        <platformTest type="osx"/>
                    </ruleList>
                </throwError>
                <substitute>
                    <files>${xplane11path}/Output/preferences/X-Plane.prf</files>
                    <type>regexp</type>
                    <substitutionList>
                        <substitution pattern="^_rcv_port\s+(?!49000).*$" value="_rcv_port 49000"/>
                        <substitution pattern="^_disable_incoming_networking\s+1$" value="_disable_incoming_networking 0"/>
                    </substitutionList>
                </substitute>
            </validationActionList>
        </directoryParameter>
        <directoryParameter>
            <name>installdir</name>
            <description>Installer.Parameter.installdir.description</description>
            <explanation>Installer.Parameter.installdir.explanation</explanation>
            <value></value>
            <default>${platform_install_prefix}/${product_fullname}</default>
            <allowEmptyValue>0</allowEmptyValue>
            <cliOptionName>prefix</cliOptionName>
            <mustBeWritable>1</mustBeWritable>
            <mustExist>0</mustExist>
            <width>40</width>
        </directoryParameter>
    </parameterList>
</project>